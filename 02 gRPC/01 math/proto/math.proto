syntax = "proto3";

package math;
option go_package = "proto";

message Summands {
    int32 first = 1;
    int32 second = 2;
}

message SumRequest {
    Summands s = 1;
}

message SumResponse {
    int32 result = 1;
}

message PrimeNumberDecompositionRequest {
    int32 number = 1;
}

message PrimeNumberDecompositionResponse {
    int32 divider = 1;
}

message ComputeAverageRequest {
    int32 number = 1;
}

message ComputeAverageResponse {
    double average = 1;
}

message FindMaximumRequest {
    int32 number = 1;
}

message FindMaximumResponse {
    int32 maximum = 1;
}

message SquareRootRequest {
    int32 number = 1;
}

message SquareRootResponse {
    double root = 1;
}

service MathService {
    // Unary Operation
    rpc Sum (SumRequest) returns (SumResponse) {
    };

    // Server Streaming
    rpc PrimeNumberDecomposition (PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse) {
    };

    // Client Streaming
    rpc ComputeAverage (stream ComputeAverageRequest) returns (ComputeAverageResponse) {
    };

    // Bidirectional Streaming
    rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse) {
    };

    // Second Unary Operation to demonstrate Go error codes.
    // Error Handling
    // This RPC will throw an exception if the sent number is negative.
    // The error being sent is of type INVALID_ARGUMENT.
    rpc SquareRoot (SquareRootRequest) returns (SquareRootResponse) {
    };
}